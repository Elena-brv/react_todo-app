{"version":3,"sources":["components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/TodoFilter/TodoFilter.js","App.js","index.js"],"names":["TodoItem","id","title","completed","changeCompleted","removeTodo","changeTodo","useState","isEditMode","setIsEditMode","newTodoTitle","setNewTodoTitle","className","classNames","editing","onDoubleClick","type","onChange","checked","onClick","value","event","target","trimLeft","onKeyUp","key","onBlur","TodoList","items","map","item","TodoFilter","todosType","selectTodosType","all","active","href","selected","innerText","TodoApp","JSON","parse","localStorage","getItem","todos","setTodos","newTodo","setNewTodo","allTodosActive","setAllTodosActive","setTodosType","setItem","stringify","filteredTodos","uncompletedTodos","filter","todo","completedTodos","onSubmit","preventDefault","placeholder","Date","length","htmlFor","todoId","changedTodos","newValue","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.769205e6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const TodoItem = ({\n  id,\n  title,\n  completed,\n  changeCompleted,\n  removeTodo,\n  changeTodo,\n}) => {\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [newTodoTitle, setNewTodoTitle] = useState(title);\n\n  const handleEditing = (event) => {\n    switch (event.key) {\n      case 'Enter':\n        if (newTodoTitle) {\n          changeTodo(id, newTodoTitle);\n        }\n\n        setIsEditMode(false);\n        break;\n\n      case 'Escape':\n        setIsEditMode(false);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      <li\n        className={classNames({\n          completed,\n          editing: isEditMode,\n        })}\n        onDoubleClick={() => setIsEditMode(true)}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            onChange={() => changeCompleted(id)}\n            checked={completed}\n          />\n          <label>{title}</label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => removeTodo(id)}\n          />\n        </div>\n        <input\n          type=\"text\"\n          className=\"edit\"\n          value={newTodoTitle}\n          onChange={(event) => {\n            setNewTodoTitle(event.target.value.trimLeft());\n          }}\n          onKeyUp={handleEditing}\n          onBlur={() => {\n            if (newTodoTitle) {\n              changeTodo(id, newTodoTitle);\n            }\n\n            setIsEditMode(false);\n          }}\n        />\n      </li>\n    </>\n  );\n};\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  changeCompleted: PropTypes.func.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n  changeTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TodoItem } from '../TodoItem';\n\nexport const TodoList = ({\n  items,\n  changeCompleted,\n  removeTodo,\n  changeTodo,\n}) => (\n  <ul className=\"todo-list\">\n    {items.map(item => (\n      <TodoItem\n        key={item.id}\n        {...item}\n        changeCompleted={changeCompleted}\n        removeTodo={removeTodo}\n        changeTodo={changeTodo}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  changeCompleted: PropTypes.func.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n  changeTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodoFilter = ({\n  todosType,\n  selectTodosType,\n  all,\n  active,\n  completed,\n}) => (\n  <ul className=\"filters\">\n    <li>\n      <a\n        href=\"#/\"\n        className={classNames({\n          selected: todosType === all,\n        })}\n        onClick={event => selectTodosType(event.target.innerText)}\n      >\n        {all}\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/active\"\n        className={classNames({\n          selected: todosType === active,\n        })}\n        onClick={event => selectTodosType(event.target.innerText)}\n      >\n        {active}\n      </a>\n    </li>\n\n    <li>\n      <a\n        href=\"#/completed\"\n        className={classNames({\n          selected: todosType === completed,\n        })}\n        onClick={event => selectTodosType(event.target.innerText)}\n      >\n        {completed}\n      </a>\n    </li>\n  </ul>\n);\n\nTodoFilter.propTypes = {\n  todosType: PropTypes.string.isRequired,\n  selectTodosType: PropTypes.func.isRequired,\n  all: PropTypes.string.isRequired,\n  active: PropTypes.string.isRequired,\n  completed: PropTypes.string.isRequired,\n};\n","import React, { useState } from 'react';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\n\nfunction TodoApp() {\n  const [todos, setTodos] = useState(JSON.parse(localStorage.getItem('todos')));\n  const [newTodo, setNewTodo] = useState({});\n  const [allTodosActive, setAllTodosActive] = useState(true);\n  const [todosType, setTodosType] = useState('All');\n\n  localStorage.setItem('todos', JSON.stringify(todos));\n\n  const uncompletedTodos = todos.filter(todo => !todo.completed);\n  const completedTodos = todos.filter(todo => todo.completed);\n\n  const all = 'All';\n  const active = 'Active';\n  const completed = 'Completed';\n\n  const changeCompleted = (todoId) => {\n    const changedTodos = todos.map((todo) => {\n      if (todo.id !== todoId) {\n        return todo;\n      }\n\n      return { ...todo, completed: !todo.completed };\n    });\n\n    setTodos(changedTodos);\n  };\n\n  const setStatusAllTodos = () => {\n    setTodos(\n      todos.map(todo => ({\n        ...todo,\n        completed: allTodosActive,\n      })),\n    );\n\n    setAllTodosActive(!allTodosActive);\n  };\n\n  const selectTodosType = (type) => {\n    setTodosType(type);\n  };\n\n  let filteredTodos;\n\n  switch (todosType) {\n    case active:\n      filteredTodos = uncompletedTodos;\n      break;\n\n    case completed:\n      filteredTodos = completedTodos;\n      break;\n\n    default:\n      filteredTodos = todos;\n  }\n\n  const clearCompleted = () => {\n    setTodos(\n      todos.map(todo => ({\n        ...todo,\n        completed: false,\n      })),\n    );\n  };\n\n  const removeTodo = (todoId) => {\n    setTodos(todos.filter(todo => todo.id !== todoId));\n  };\n\n  const changeTodo = (todoId, newValue) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id !== todoId) {\n        return todo;\n      }\n\n      return { ...todo, title: newValue };\n    }));\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos App</h1>\n\n        <form onSubmit={(event) => {\n          event.preventDefault();\n          setTodos([...todos, newTodo]);\n          setNewTodo({ title: '' });\n          localStorage.setItem('todos', JSON.stringify(todos));\n        }}\n        >\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={newTodo.title}\n            onChange={event => setNewTodo({\n              id: +new Date(),\n              title: event.target.value.trimLeft(),\n              completed: false,\n            })}\n          />\n        </form>\n      </header>\n\n      {todos.length > 0 && (\n        <>\n          <section className=\"main\">\n            <input\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className=\"toggle-all\"\n              onChange={setStatusAllTodos}\n            />\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n            <TodoList\n              items={filteredTodos}\n              changeCompleted={changeCompleted}\n              removeTodo={removeTodo}\n              changeTodo={changeTodo}\n            />\n\n          </section>\n\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              {`${uncompletedTodos.length} items left`}\n            </span>\n\n            <TodoFilter\n              todosType={todosType}\n              selectTodosType={selectTodosType}\n              all={all}\n              active={active}\n              completed={completed}\n            />\n\n            {completedTodos.length > 0 && (\n              <button\n                type=\"button\"\n                className=\"clear-completed\"\n                onClick={clearCompleted}\n              >\n                Clear completed\n              </button>\n            )}\n          </footer>\n        </>\n      )}\n    </section>\n  );\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport TodoApp from './App';\n\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}